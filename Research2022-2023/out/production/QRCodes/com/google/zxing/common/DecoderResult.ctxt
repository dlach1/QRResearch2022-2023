#BlueJ class context
comment0.target=DecoderResult
comment0.text=\r\n\ <p>Encapsulates\ the\ result\ of\ decoding\ a\ matrix\ of\ bits.\ This\ typically\r\n\ applies\ to\ 2D\ barcode\ formats.\ For\ now\ it\ contains\ the\ raw\ bytes\ obtained,\r\n\ as\ well\ as\ a\ String\ interpretation\ of\ those\ bytes,\ if\ applicable.</p>\r\n\r\n\ @author\ Sean\ Owen\r\n
comment1.params=
comment1.target=byte[]\ getRawBytes()
comment1.text=\r\n\ @return\ raw\ bytes\ representing\ the\ result,\ or\ {@code\ null}\ if\ not\ applicable\r\n
comment10.params=erasures
comment10.target=void\ setErasures(java.lang.Integer)
comment11.params=
comment11.target=java.lang.Object\ getOther()
comment11.text=\r\n\ @return\ arbitrary\ additional\ metadata\r\n
comment12.params=other
comment12.target=void\ setOther(java.lang.Object)
comment13.params=
comment13.target=boolean\ hasStructuredAppend()
comment14.params=
comment14.target=int\ getStructuredAppendParity()
comment15.params=
comment15.target=int\ getStructuredAppendSequenceNumber()
comment16.params=
comment16.target=int\ getSymbologyModifier()
comment2.params=
comment2.target=int\ getNumBits()
comment2.text=\r\n\ @return\ how\ many\ bits\ of\ {@link\ \#getRawBytes()}\ are\ valid;\ typically\ 8\ times\ its\ length\r\n\ @since\ 3.3.0\r\n
comment3.params=numBits
comment3.target=void\ setNumBits(int)
comment3.text=\r\n\ @param\ numBits\ overrides\ the\ number\ of\ bits\ that\ are\ valid\ in\ {@link\ \#getRawBytes()}\r\n\ @since\ 3.3.0\r\n
comment4.params=
comment4.target=java.lang.String\ getText()
comment4.text=\r\n\ @return\ text\ representation\ of\ the\ result\r\n
comment5.params=
comment5.target=getByteSegments()
comment5.text=\r\n\ @return\ list\ of\ byte\ segments\ in\ the\ result,\ or\ {@code\ null}\ if\ not\ applicable\r\n
comment6.params=
comment6.target=java.lang.String\ getECLevel()
comment6.text=\r\n\ @return\ name\ of\ error\ correction\ level\ used,\ or\ {@code\ null}\ if\ not\ applicable\r\n
comment7.params=
comment7.target=java.lang.Integer\ getErrorsCorrected()
comment7.text=\r\n\ @return\ number\ of\ errors\ corrected,\ or\ {@code\ null}\ if\ not\ applicable\r\n
comment8.params=errorsCorrected
comment8.target=void\ setErrorsCorrected(java.lang.Integer)
comment9.params=
comment9.target=java.lang.Integer\ getErasures()
comment9.text=\r\n\ @return\ number\ of\ erasures\ corrected,\ or\ {@code\ null}\ if\ not\ applicable\r\n
numComments=17
